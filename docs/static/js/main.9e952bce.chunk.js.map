{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputVale","onSubmit","e","preventDefault","length","x","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,oCACI,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBP,GAAc,SAAAQ,GAAC,OAAKN,GAAL,mBAAoBM,OACnCL,EAAa,OAOT,2BACIM,KAAK,OACLC,MAAOR,EACPS,SAnBU,SAACN,GACvBF,EAAaE,EAAEO,OAAOF,aCLjBG,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAIpC,OAFAC,QAAQC,IAAIJ,EAAIC,EAAOC,GAGnB,yBAAKG,UAAU,QACX,yBAAKC,IAAMJ,EAAMK,IAAMN,IACvB,2BAAIA,K,uBCTHO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfR,EADe,iDACiCS,UAAUF,GAD3C,+DAEAG,MAAMV,GAFN,cAEbW,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACRZ,QAAQC,IAAIW,GAENC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAVvB,kBAcZc,GAdY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GAAI,OACNH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAElB,CAACb,IAEGc,EDZ2BK,CAAanB,GAAjCU,EAFuB,EAE7BJ,KAAcO,EAFe,EAEfA,QAEtB,OACI,oCACI,4BAAMb,GACJa,GAAW,sCACb,yBAAKjB,UAAU,aAEPc,EAAOF,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIW,IAAMX,EAAIlB,IACLkB,UEbpBY,EAAe,WAAM,MAGM3C,mBAAS,CAAC,gBAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAS9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIA,4BAEQ6C,EAAWd,KAAI,SAAAe,GAAG,OACd,kBAAC,EAAD,CACIH,IAAMG,EACNvB,SAAWuB,UCrBvCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.9e952bce.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputVale] = useState('');\r\n    const handleInputChange = (e) =>  {\r\n        setInputVale(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(inputValue);\r\n        if (inputValue.length > 2) {\r\n            setCategories(x => [inputValue, ...x]);\r\n            setInputVale('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    let url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=g8tW7EKl2HnZcliRywQwcC1y3JcgV4If`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    console.log(data);\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && <p>Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => \r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            }))\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['Saint Seiya', 'Ranma', 'Detective Conan'];\r\n    const [categories, setCategories] = useState(['Saint Seiya'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(categories => [...categories, 'Cowboy bebop']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(cat => \r\n                        <GifGrid\r\n                            key={ cat }\r\n                            category={ cat } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from '../src/GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpert"],"sourceRoot":""}